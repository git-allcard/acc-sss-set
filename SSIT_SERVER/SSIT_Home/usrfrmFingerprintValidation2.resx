<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCode.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>